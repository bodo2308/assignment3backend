{"version":3,"sources":["redux/reducers/AuthReducer/AuthReducer.js","redux/reducers/ProfilesReducer/ProfilesReducer.js","redux/reducers/index.js","views/layouts/NavBar.js","views/layouts/index.js","views/Auth/AuthGuard.js","views/Auth/LoginView/LoginForm.js","views/Auth/LoginView/index.js","views/Auth/RegisterView/RegisterForm.js","views/Auth/RegisterView/index.js","constants/index.js","views/Profiles/ProfileForm.js","views/Profiles/FuelQuoteForm.js","views/Profiles/index.js","views/FuelQuote/FuelQuoteBody.js","Routes.js","App.js","index.js","redux/store/index.js"],"names":["initialState","user","authReducer","state","action","type","profilesReducer","createRootReducer","history","combineReducers","router","connectRouter","profiles","auth","useStyles","makeStyles","root","flexGrow","title","NavBar","classes","className","AppBar","position","Toolbar","Grid","container","justify","item","Link","component","RouterLink","to","variant","color","Button","theme","display","height","overflow","width","wrapper","flex","paddingTop","paddingLeft","paddingRight","contentContainer","content","DashboardLayout","children","AuthRoute","Component","render","rest","LoginForm","onSubmitSuccess","useDispatch","initialValues","email","password","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","error","message","response","data","success","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","clsx","TextField","Boolean","fullWidth","autoFocus","helperText","label","margin","name","onBlur","onChange","value","Box","mt","disabled","size","FormHelperText","LoginView","useHistory","Container","maxWidth","mb","alignItems","Card","style","backgroundColor","border","CardContent","Typography","push","my","Divider","RegisterForm","RegisterView","states","formControl","minWidth","formControl2","cardHeader","textAlign","InfoForm","props","React","useState","fullName","setFullName","addressOne","setAddressOne","addressTwo","setAddressTwo","city","setCity","setState","zip","setZip","CardHeader","formTitle","spacing","xs","event","target","InputLabelProps","shrink","p","FormControl","InputLabel","Select","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","displayEmpty","input","OutlinedInput","notched","labelWidth","map","index","MenuItem","FQFORM","gallonsRequested","setGallonsRequested","deliveryAddress","setDeliveryAddress","deliveryDate","setDeliveryDate","price","setPrice","amountDue","setAmountDue","marginLeft","ProfilesBody","setProfileData","saveProfile","profileDetails","console","log","spacingScheme","actionIcon","marginRight","FuelQuoteTabular","Routes","exact","from","path","AuthGuard","createBrowserHistory","createStyles","boxSizing","padding","html","body","App","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","composeWithDevTools","applyMiddleware","enhancers","composedEnhancers","compose","createStore","rootReducer","configureStore","ReactDOM","document","getElementById"],"mappings":"4QAEMA,EAAe,CACnBC,KAAM,IAGD,SAASC,IAA2C,IAA/BC,EAA8B,uDAAtBH,EAAcI,EAAQ,uCAKpD,OAJIA,EAAOC,KAIJF,E,WCTPH,EAAe,GAId,SAASM,IAA+C,IAA/BH,EAA8B,uDAAtBH,EAAcI,EAAQ,uCAIxD,OAHIA,EAAOC,KAGJF,ECJE,SAASI,EAAkBC,GACxC,OAAOC,0BAAgB,CACrBC,OAAQC,YAAcH,GACtBI,SAAUN,EACVO,KAAMX,I,0FCOJY,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLD,SAAU,OA0CCE,MAtCf,WACE,IAAMC,EAAUN,IAEhB,OACE,yBAAKO,UAAWD,EAAQJ,MACtB,kBAACM,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,gBACHC,QAAQ,QACRC,MAAM,iBAEN,kBAACC,EAAA,EAAD,CAAQD,MAAM,WAAd,eAGJ,kBAACT,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,iBACHC,QAAQ,QACRC,MAAM,iBAEN,kBAACC,EAAA,EAAD,CAAQD,MAAM,WAAd,gBAGJ,kBAACT,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACO,EAAA,EAAD,CAAQD,MAAM,WAAd,gBCnDRpB,EAAYC,aAAW,SAACqB,GAAD,MAAY,CACvCpB,KAAM,CACJqB,QAAS,OACTC,OAAQ,OACRC,SAAU,SACVC,MAAO,QAETC,QAAS,CACPJ,QAAS,OACTK,KAAM,WACNH,SAAU,SACVI,WAAY,GACZC,YAAa,GACbC,aAAc,IAEhBC,iBAAkB,CAChBT,QAAS,OACTK,KAAM,WACNH,SAAU,UAEZQ,QAAS,CACPL,KAAM,WACNJ,OAAQ,OACRC,SAAU,YAmBCS,MAff,YAAwC,IAAbC,EAAY,EAAZA,SACnB7B,EAAUN,IAEhB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKO,UAAWD,EAAQqB,SACtB,yBAAKpB,UAAWD,EAAQ0B,kBACtB,yBAAKzB,UAAWD,EAAQ2B,SAAUE,O,iBCvB7BC,MAXf,YAA+D,IAA/BC,EAA8B,EAAzCrB,UAAsBsB,EAAmB,EAAnBA,OAAWC,EAAQ,sCAO5D,OAAOD,EAASA,EAAO,eAAKC,IAAU,kBAACF,EAAcE,I,uHCEjDvC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAsGOsC,MAnGf,YAA6D,IAAxCjC,EAAuC,EAAvCA,UAAWkC,EAA4B,EAA5BA,gBAAoBF,EAAQ,+CACpDjC,EAAUN,IAGhB,OAFiB0C,cAGf,kBAAC,IAAD,CACEC,cAAe,CACbC,MAAO,qBACPC,SAAU,QAEZC,iBAAkBC,MAAaC,MAAM,CACnCJ,MAAOG,MACJH,MAAM,yBACNK,IAAI,KACJC,SAAS,qBACZL,SAAUE,MACPE,IAAI,KACJC,SAAS,0BAEdC,SAAQ,uCAAE,WAAOC,EAAP,wBAAAC,EAAA,sDAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAC/C,IAEEf,IACA,MAAOgB,GACDC,EACHD,EAAME,UAAYF,EAAME,SAASC,KAAKF,SACvC,uBAEFH,EAAU,CAAEM,SAAS,IACrBP,EAAU,CAAEQ,OAAQJ,IACpBF,GAAc,GAXR,2CAAF,0DAeP,gBACCO,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAhB,EAPD,EAOCA,OAPD,OASC,wCACEiB,YAAU,EACV9D,UAAW+D,YAAKhE,EAAQJ,KAAMK,GAC9B4C,SAAUe,GACN3B,GAEJ,kBAACgC,EAAA,EAAD,CACEd,MAAOe,QAAQJ,EAAQxB,OAASmB,EAAOnB,OACvC6B,WAAS,EACTC,WAAS,EACTC,WAAYP,EAAQxB,OAASmB,EAAOnB,MACpCgC,MAAM,gBACNC,OAAO,SACPC,KAAK,QACLC,OAAQf,EACRgB,SAAUf,EACV1E,KAAK,QACL0F,MAAO7B,EAAOR,MACdzB,QAAQ,aAEV,kBAACoD,EAAA,EAAD,CACEd,MAAOe,QAAQJ,EAAQvB,UAAYkB,EAAOlB,UAC1C4B,WAAS,EACTE,WAAYP,EAAQvB,UAAYkB,EAAOlB,SACvC+B,MAAM,WACNC,OAAO,SACPC,KAAK,WACLC,OAAQf,EACRgB,SAAUf,EACV1E,KAAK,WACL0F,MAAO7B,EAAOP,SACd1B,QAAQ,aAEV,kBAAC+D,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9D,EAAA,EAAD,CACED,MAAM,YACNgE,SAAUjB,EACVM,WAAS,EACTY,KAAK,QACL9F,KAAK,SACL4B,QAAQ,aANV,UAUC4C,EAAOD,QACN,kBAACoB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACG,EAAA,EAAD,CAAgB7B,OAAK,GAAEM,EAAOD,eCxFxC9D,EAAYC,aAAW,SAACqB,GAAD,MAAY,MA4C1BiE,MA1Cf,WACkBvF,IAAhB,IACMN,EAAU8F,cAMhB,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACR,EAAA,EAAD,CAAKS,GAAI,EAAGpE,QAAQ,OAAOqE,WAAW,WACtC,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,YACjBC,OAAQ,oBAGV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY/E,QAAQ,KAAKC,MAAM,eAA/B,SAGA,kBAAC8D,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAW1C,gBAnBO,WAC1B/C,EAAQyG,KAAK,YAoBP,kBAACjB,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAACC,EAAA,EAAD,OAEF,kBAACtF,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,YACHC,QAAQ,QACRC,MAAM,iBAJR,0BCjCJpB,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OA8GOoG,MA3Gf,YAAgE,IAAxC/F,EAAuC,EAAvCA,UAAWkC,EAA4B,EAA5BA,gBAAoBF,EAAQ,+CACvDjC,EAAUN,IAGhB,OAFiB0C,cAGf,kBAAC,IAAD,CACEC,cAAe,CACbC,MAAO,qBACPC,SAAU,QAEZC,iBAAkBC,MAAaC,MAAM,CACnCJ,MAAOG,MACJH,MAAM,yBACNK,IAAI,KACJC,SAAS,qBACZL,SAAUE,MACPE,IAAI,KACJC,SAAS,0BAEdC,SAAQ,uCAAE,WAAOC,EAAP,wBAAAC,EAAA,sDAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAC/C,IAEEf,IACA,MAAOgB,GACDC,EACHD,EAAME,UAAYF,EAAME,SAASC,KAAKF,SACvC,uBAEFH,EAAU,CAAEM,SAAS,IACrBP,EAAU,CAAEQ,OAAQJ,IACpBF,GAAc,GAXR,2CAAF,0DAeP,gBACCO,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAhB,EAPD,EAOCA,OAPD,OASC,wCACEiB,YAAU,EACV9D,UAAW+D,YAAKhE,EAAQJ,KAAMK,GAC9B4C,SAAUe,GACN3B,GAEJ,kBAACgC,EAAA,EAAD,CACEd,MAAOe,QAAQJ,EAAQxB,OAASmB,EAAOnB,OACvC6B,WAAS,EACTC,WAAS,EACTC,WAAYP,EAAQxB,OAASmB,EAAOnB,MACpCgC,MAAM,gBACNC,OAAO,SACPC,KAAK,QACLC,OAAQf,EACRgB,SAAUf,EACV1E,KAAK,QACL0F,MAAO7B,EAAOR,MACdzB,QAAQ,aAEV,kBAACoD,EAAA,EAAD,CACEd,MAAOe,QAAQJ,EAAQvB,UAAYkB,EAAOlB,UAC1C4B,WAAS,EACTE,WAAYP,EAAQvB,UAAYkB,EAAOlB,SACvC+B,MAAM,WACNC,OAAO,SACPC,KAAK,WACLC,OAAQf,EACRgB,SAAUf,EACV1E,KAAK,WACL0F,MAAO7B,EAAOP,SACd1B,QAAQ,aAEV,kBAAC+D,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACpE,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,SACHC,QAAQ,QACRC,MAAM,iBAEN,kBAACC,EAAA,EAAD,CACED,MAAM,YACNgE,SAAUjB,EACVM,WAAS,EACTY,KAAK,QACL9F,KAAK,SACL4B,QAAQ,aANV,WAYD4C,EAAOD,QACN,kBAACoB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACG,EAAA,EAAD,CAAgB7B,OAAK,GAAEM,EAAOD,eClGxC9D,GAAYC,aAAW,SAACqB,GAAD,MAAY,MAqC1BiF,OAnCf,WACkBvG,KAAhB,IACMN,EAAU8F,cAMhB,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACR,EAAA,EAAD,CAAKS,GAAI,EAAGpE,QAAQ,OAAOqE,WAAW,WACtC,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,YACjBC,OAAQ,oBAGV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY/E,QAAQ,KAAKC,MAAM,eAA/B,YAGA,kBAAC8D,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAc1C,gBAnBI,WAC1B/C,EAAQyG,KAAK,YAoBP,kBAACjB,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAACC,EAAA,EAAD,W,qEC/CCG,GAAS,CAAC,UAAW,SAAU,UAAW,WAAY,aAAc,WAAY,cAAe,WAAY,UAAW,UAAW,SAAU,QAAS,kBAAmB,OAAQ,SAAU,WAAY,YAAa,QAAS,WAAY,gBAAiB,WAAY,YAAa,cAAe,WAAY,kBAAmB,SAAU,gBAAiB,aAAc,aAAc,WAAY,iBAAkB,eAAgB,OAAQ,WAAY,SAAU,2BAA4B,iBAAkB,eAAgB,YAAa,QAAS,OAAQ,UAAW,WAAY,aAAc,gBAAiB,YAAa,WCwBxmBxG,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACvCpB,KAAM,GAENuG,YAAa,CACXC,SAAU,KAEZC,aAAc,CACZjF,MAAO,QAETkF,WAAY,CACVC,UAAW,cAyIAC,OArIf,SAAkBC,GAChB,IAAMzG,EAAUN,KADO,EAGSgH,IAAMC,WAHf,oBAGhBC,EAHgB,KAGNC,EAHM,OAIaH,IAAMC,WAJnB,oBAIhBG,EAJgB,KAIJC,EAJI,OAKaL,IAAMC,WALnB,oBAKhBK,EALgB,KAKJC,EALI,OAMCP,IAAMC,WANP,oBAMhBO,EANgB,KAMVC,EANU,OAOGT,IAAMC,WAPT,oBAOhB5H,EAPgB,KAOTqI,EAPS,OAQDV,IAAMC,WARL,oBAQhBU,EARgB,KAQXC,EARW,KAUvB,OACE,kBAAC/B,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,YACjBC,OAAQ,oBAGV,kBAAC6B,GAAA,EAAD,CAAYtH,UAAWD,EAAQsG,WAAYxG,MAAO2G,EAAMe,YACxD,kBAACzB,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,KACE,kBAACtF,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,YACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTd,EAAYc,EAAMC,OAAOjD,QAE3BkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAOiC,MAIb,kBAAChC,EAAA,EAAD,CAAKmD,EAAG,IACR,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,cACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTZ,EAAcY,EAAMC,OAAOjD,QAE7BkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAOmC,MAIb,kBAACzG,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,wBACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTV,EAAcU,EAAMC,OAAOjD,QAE7BkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAOqC,MAIb,kBAACpC,EAAA,EAAD,CAAKmD,EAAG,IAER,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,OACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTR,EAAQQ,EAAMC,OAAOjD,QAEvBkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAOuC,KAGX,kBAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACM,GAAA,EAAD,CAAanH,QAAQ,WAAWZ,UAAWD,EAAQqG,cACjD,kBAAC4B,GAAA,EAAD,CAAYH,QAAM,GAAlB,SACA,kBAACI,GAAA,EAAD,CACEC,UAAW,CACTC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,SAGhBC,cAAY,EACZ7D,MAAO5F,EACP2F,SAAU,SAACiD,GACTP,EAASO,EAAMC,OAAOjD,QAExB8D,MAAO,kBAACC,GAAA,EAAD,CAAeC,SAAO,EAACC,WAAW,QAExC1C,GAAO2C,KAAI,SAACvF,EAAMwF,GAAP,OACV,kBAACC,GAAA,EAAD,CAAUpE,MAAOrB,GAAOA,UAMlC,kBAACsB,EAAA,EAAD,CAAKmD,EAAG,IACR,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,WACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTL,EAAOK,EAAMC,OAAOjD,QAEtBkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAO0C,SClJf3H,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACvCpB,KAAM,GACN0G,WAAY,CACVC,UAAW,cAgHAyC,OA5Gf,SAAgBvC,GACd,IAAMzG,EAAUN,KADK,GAELwF,cAEgCwB,IAAMC,SAAS,KAJ1C,oBAIdsC,EAJc,KAIIC,EAJJ,OAKyBxC,IAAMC,SAAS,IALxC,oBAKdwC,EALc,KAKGC,EALH,OAMmB1C,IAAMC,SAAS,IANlC,oBAMd0C,EANc,KAMAC,EANA,OAOK5C,IAAMC,SAAS,IAPpB,oBAOd4C,EAPc,KAOPC,EAPO,OAQa9C,IAAMC,SAAS,IAR5B,oBAQd8C,EARc,KAQHC,EARG,KAUrB,OACE,kBAACrJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACtB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,EAAClC,MAAO,CAAEmE,WAAY,KACjC,kBAACpE,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,YACjBC,OAAQ,oBAGV,kBAAC6B,GAAA,EAAD,CAAYtH,UAAWD,EAAQsG,WAAYxG,MAAM,eACjD,kBAACiG,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAD,KACE,kBAACtF,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,oBACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTuB,EAAoBvB,EAAMC,OAAOjD,QAEnCkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAOsE,KAGX,kBAAC5I,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,gBACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACT2B,EAAgB3B,EAAMC,OAAOjD,QAE/BkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAO0E,MAIb,kBAACzE,EAAA,EAAD,CAAKmD,EAAG,IACR,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,QACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACT6B,EAAS7B,EAAMC,OAAOjD,QAExBkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAO4E,KAGX,kBAAClJ,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,aACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACT+B,EAAa/B,EAAMC,OAAOjD,QAE5BkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAO8E,MAIb,kBAAC7E,EAAA,EAAD,CAAKmD,EAAG,IACR,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACmH,QAAS,GACvB,kBAACpH,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAACzD,EAAA,EAAD,CACEK,MAAM,mBACNH,WAAS,EACTtD,QAAQ,WACR6D,SAAU,SAACiD,GACTyB,EAAmBzB,EAAMC,OAAOjD,QAElCkD,gBAAiB,CACfC,QAAQ,GAEVnD,MAAOwE,WC9GnBzJ,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACvCpB,KAAM,OAsCOgK,OAnCf,SAAsBnD,GACJ/G,KACAwF,cACC9C,cAFjB,IAD2B,EAKWsE,IAAMC,SAAS,IAL1B,oBAKPkD,GALO,aAMenD,IAAMC,SAAS,IAN9B,oBAQ3B,OAR2B,UASzB,kBAACtG,EAAA,EAAD,CACEmF,MAAO,CACLhE,YAAa,MAEflB,WAAS,EACTC,QAAQ,iBAGR,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,EAAClC,MAAO,CAAE/D,aAAc,KACnC,kBAAC,GAAD,CACE+F,UAAW,kBACXsC,YAAa,SAACC,GACZC,QAAQC,IAAI,WAAYF,GACxBF,EAAeE,OAMrB,kBAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACkH,IAAE,GACX,kBAAC,GAAD,SCtCU/H,aAAW,SAACqB,GAAD,MAAY,CACvCpB,KAAM,GACNsK,cAAe,CACbP,WAAY3I,EAAMyG,QAAQ,IAE5B0C,WAAY,CACVC,YAAapJ,EAAMyG,QAAQ,QAQhB4C,OAJf,SAA0B5D,GACxB,OAAO,4CCgBM6D,OAvBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAI5J,GAAG,WAC5B,kBAAC,IAAD,CAAO2J,OAAK,EAACE,KAAK,SAAS/J,UAAWuE,IACtC,kBAAC,IAAD,CAAOsF,OAAK,EAACE,KAAK,YAAY/J,UAAWuF,KAEzC,kBAACyE,EAAD,CACED,KAAK,OACLzI,OAAQ,SAACyE,GAAD,OACN,kBAAC,EAAWA,EACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU8D,OAAK,EAACC,KAAK,OAAO5J,GAAG,kBAC/B,kBAAC,IAAD,CAAO2J,OAAK,EAACE,KAAK,gBAAgB/J,UAAWkJ,KAC7C,kBAAC,IAAD,CAAOW,OAAK,EAACE,KAAK,iBAAiB/J,UAAW2J,YCjBtDjL,GAAUuL,cACVjL,GAAYC,aAAW,kBAC3BiL,YAAa,CACX,UAAW,CACT,IAAK,CACHC,UAAW,aACXtG,OAAQ,EACRuG,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3B7J,OAAQ,OACRE,MAAO,QAET4J,KAAM,CACJ9J,OAAQ,OACRE,MAAO,QAET,QAAS,CACPF,OAAQ,OACRE,MAAO,cAgBA6J,OAVf,WAGE,OAFAvL,KAGE,kBAAC,IAAD,CAAQN,QAASA,IACf,kBAAC,GAAD,QChCA8L,GCCC,WAA8C,IAAtBC,EAAqB,uDAAJ,GACxCC,EAAc,CAACC,KAGfC,EAAqBC,8BACzBC,kBAAe,WAAf,EAAmBJ,IAGfK,EAAY,CAACH,GACbI,EAAoBC,UAAO,WAAP,EAAWF,GAE/BP,EAAQU,sBAAYC,EAAaV,EAAgBO,GAEvD,OAAOR,EDdKY,GAEdC,IAAS/J,OACP,kBAAC,IAAD,CAAUkJ,MAAOA,IACf,kBAAC,GAAD,OAEFc,SAASC,eAAe,W","file":"static/js/main.51d97c7c.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nconst initialState = {\n  user: {},\n};\n\nexport function authReducer(state = initialState, action) {\n  switch (action.type) {\n   \n\n    default: {\n      return state;\n    }\n  }\n}\n","import * as actions from '../../actions/ProfilesActions/ProfilesActions';\n\nconst initialState = {\n \n};\n\nexport function profilesReducer(state = initialState, action) {\n  switch (action.type) {\n    \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { authReducer } from \"./AuthReducer/AuthReducer\";\nimport { profilesReducer } from \"./ProfilesReducer/ProfilesReducer\";\n\nexport default function createRootReducer(history) {\n  return combineReducers({\n    router: connectRouter(history),\n    profiles: profilesReducer,\n    auth: authReducer,\n  });\n}\n","/* eslint-disable no-use-before-define */\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  Box,\n  Divider,\n  Link,\n  Grid,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles,\n} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction NavBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid container justify=\"space-evenly\">\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/app/profiles\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                <Button color=\"inherit\"> Profiles</Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/app/fuelquote\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                <Button color=\"inherit\">Fuel Quote</Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Button color=\"inherit\">Logout</Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n    paddingTop: 64,\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  contentContainer: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n  },\n  content: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n    overflow: \"auto\",\n  },\n}));\n\nfunction DashboardLayout({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <NavBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction AuthRoute({ component: Component, render, ...rest }) {\n  // const account = useSelector((state) => state.account);\n\n  // if (!account.user) {\n  //   return <Redirect to=\"/login\" />;\n  // }\n\n  return render ? render({ ...rest }) : <Component {...rest} />;\n}\n\n\nexport default AuthRoute;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  TextField,\n  FormHelperText,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nfunction LoginForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"default@project.io\",\n        password: \"user\",\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Must be a valid email\")\n          .max(255)\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .max(255)\n          .required(\"Password is required\"),\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          // await dispatch(login(values.email, values.password));\n          onSubmitSuccess();\n        } catch (error) {\n          const message =\n            (error.response && error.response.data.message) ||\n            \"Something went wrong\";\n\n          setStatus({ success: false });\n          setErrors({ submit: message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => (\n        <form\n          noValidate\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport {\n  Avatar,\n  Button,\n  Box,\n  Container,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  colors,\n  makeStyles,\n} from \"@material-ui/core\";\nimport LoginForm from \"./LoginForm\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction LoginView() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmitSuccess = () => {\n    history.push(\"/app\");\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box mb={8} display=\"flex\" alignItems=\"center\"></Box>\n      <Card\n        style={{\n          backgroundColor: \"lightgrey\",\n          border: \"2px solid black\",\n        }}\n      >\n        <CardContent>\n          <Typography variant=\"h2\" color=\"textPrimary\">\n            Login\n          </Typography>\n          <Box mt={2}></Box>\n          <Box mt={3}>\n            <LoginForm onSubmitSuccess={handleSubmitSuccess} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <Link\n            component={RouterLink}\n            to=\"/register\"\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            Create new account\n          </Link>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default LoginView;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  TextField,\n  FormHelperText,\n  makeStyles,\n  Link,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"default@project.io\",\n        password: \"user\",\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Must be a valid email\")\n          .max(255)\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .max(255)\n          .required(\"Password is required\"),\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          // await dispatch(login(values.email, values.password));\n          onSubmitSuccess();\n        } catch (error) {\n          const message =\n            (error.response && error.response.data.message) ||\n            \"Something went wrong\";\n\n          setStatus({ success: false });\n          setErrors({ submit: message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => (\n        <form\n          noValidate\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Create\n              </Button>\n            </Link>\n\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport {\n  Avatar,\n  Button,\n  Box,\n  Container,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  colors,\n  makeStyles,\n} from \"@material-ui/core\";\nimport RegisterForm from \"./RegisterForm\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction RegisterView() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmitSuccess = () => {\n    history.push(\"/app\");\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box mb={8} display=\"flex\" alignItems=\"center\"></Box>\n      <Card\n        style={{\n          backgroundColor: \"lightgrey\",\n          border: \"2px solid black\",\n        }}\n      >\n        <CardContent>\n          <Typography variant=\"h2\" color=\"textPrimary\">\n            Register\n          </Typography>\n          <Box mt={2}></Box>\n          <Box mt={3}>\n            <RegisterForm onSubmitSuccess={handleSubmitSuccess} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          \n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default RegisterView;\n","export const states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"IllinoisIndiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"MontanaNebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"PennsylvaniaRhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  TextField,\n  Box,\n  Button,\n  Grid,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  makeStyles,\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  OutlinedInput,\n} from \"@material-ui/core\";\n\nimport { states } from \"../../constants/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n\n  formControl: {\n    minWidth: 160,\n  },\n  formControl2: {\n    width: \"100%\",\n  },\n  cardHeader: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction InfoForm(props) {\n  const classes = useStyles();\n\n  const [fullName, setFullName] = React.useState();\n  const [addressOne, setAddressOne] = React.useState();\n  const [addressTwo, setAddressTwo] = React.useState();\n  const [city, setCity] = React.useState();\n  const [state, setState] = React.useState();\n  const [zip, setZip] = React.useState();\n\n  return (\n    <Card\n      style={{\n        backgroundColor: \"lightgrey\",\n        border: \"2px solid black\",\n      }}\n    >\n      <CardHeader className={classes.cardHeader} title={props.formTitle} />\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <TextField\n              label=\"Full Name\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setFullName(event.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={fullName}\n            />\n          </Grid>\n        </Grid>\n        <Box p={1} />\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <TextField\n              label=\"Address One\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setAddressOne(event.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={addressOne}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <TextField\n              label=\"Address Two(optional)\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setAddressTwo(event.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={addressTwo}\n            />\n          </Grid>\n        </Grid>\n        <Box p={1} />\n\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <TextField\n              label=\"City\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setCity(event.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={city}\n            />\n          </Grid>\n          <Grid item xs>\n            <FormControl variant=\"outlined\" className={classes.formControl2}>\n              <InputLabel shrink>State</InputLabel>\n              <Select\n                MenuProps={{\n                  getContentAnchorEl: null,\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  },\n                }}\n                displayEmpty\n                value={state}\n                onChange={(event) => {\n                  setState(event.target.value);\n                }}\n                input={<OutlinedInput notched labelWidth=\"45\" />}\n              >\n                {states.map((data, index) => (\n                  <MenuItem value={data}>{data}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Box p={1} />\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <TextField\n              label=\"Zip Code\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setZip(event.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={zip}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoForm;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  makeStyles,\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  cardHeader: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction FQFORM(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [gallonsRequested, setGallonsRequested] = React.useState(\"\");\n  const [deliveryAddress, setDeliveryAddress] = React.useState(\"\");\n  const [deliveryDate, setDeliveryDate] = React.useState(\"\");\n  const [price, setPrice] = React.useState(\"\");\n  const [amountDue, setAmountDue] = React.useState(\"\");\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item xs style={{ marginLeft: 15 }}>\n        <Card\n          style={{\n            backgroundColor: \"lightgrey\",\n            border: \"2px solid black\",\n          }}\n        >\n          <CardHeader className={classes.cardHeader} title=\"Fuel Quote\" />\n          <Divider />\n\n          <CardContent>\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  label=\"Gallons Requested\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onChange={(event) => {\n                    setGallonsRequested(event.target.value);\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={gallonsRequested}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  label=\"Delivery Date\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onChange={(event) => {\n                    setDeliveryDate(event.target.value);\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={deliveryDate}\n                />\n              </Grid>\n            </Grid>\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  label=\"Price\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onChange={(event) => {\n                    setPrice(event.target.value);\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={price}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  label=\"Amount Due\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onChange={(event) => {\n                    setAmountDue(event.target.value);\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={amountDue}\n                />\n              </Grid>\n            </Grid>\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  label=\"Delivery Address\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onChange={(event) => {\n                    setDeliveryAddress(event.target.value);\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={deliveryAddress}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default FQFORM;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport InfoForm from \"./ProfileForm\";\nimport FQFORM from \"./FuelQuoteForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nfunction ProfilesBody(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [profileData, setProfileData] = React.useState({});\n  const [fuelQuoteData, setFuelQuoteData] = React.useState({});\n\n  return (\n    <Grid\n      style={{\n        paddingLeft: \"20\",\n      }}\n      container\n      justify=\"space-between\"\n    >\n      {/* ProfileForm */}\n      <Grid item xs style={{ paddingRight: 15}}>\n        <InfoForm\n          formTitle={\"Profile Details\"}\n          saveProfile={(profileDetails) => {\n            console.log(\"profile:\", profileDetails);\n            setProfileData(profileDetails);\n          }}\n        />\n      </Grid>\n\n      {/* FUEL QUOTE FORM */}\n      <Grid item xs>\n        <FQFORM />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ProfilesBody;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  spacingScheme: {\n    marginLeft: theme.spacing(1),\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction FuelQuoteTabular(props) {\n  return <div>FUEL QUOTE</div>;\n}\n\nexport default FuelQuoteTabular;\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Layout from \"./views/layouts\";\nimport AuthGuard from \"./views/Auth/AuthGuard\";\nimport LoginView from \"./views/Auth/LoginView\";\nimport RegisterView from \"./views/Auth/RegisterView\";\nimport ProfilesBody from \"./views/Profiles\";\nimport FuelQuoteTabular from \"./views/FuelQuote/FuelQuoteBody\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/login\" />\n      <Route exact path=\"/login\" component={LoginView} />\n      <Route exact path=\"/register\" component={RegisterView} />\n      {/* AUTH  GUARD */}\n      <AuthGuard\n        path=\"/app\"\n        render={(props) => (\n          <Layout {...props}>\n            <Switch>\n              <Redirect exact from=\"/app\" to=\"/app/profiles\" />\n              <Route exact path=\"/app/profiles\" component={ProfilesBody} />\n              <Route exact path=\"/app/fuelquote\" component={FuelQuoteTabular} />\n            </Switch>\n          </Layout>\n        )}\n      />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { createStyles, makeStyles } from \"@material-ui/core\";\nimport Routes from \"./Routes\";\n\nconst history = createBrowserHistory();\nconst useStyles = makeStyles(() =>\n  createStyles({\n    \"@global\": {\n      \"*\": {\n        boxSizing: \"border-box\",\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        \"-webkit-font-smoothing\": \"antialiased\",\n        \"-moz-osx-font-smoothing\": \"grayscale\",\n        height: \"100%\",\n        width: \"100%\",\n      },\n      body: {\n        height: \"100%\",\n        width: \"100%\",\n      },\n      \"#root\": {\n        height: \"100%\",\n        width: \"100%\",\n      },\n    },\n  })\n);\n\nfunction App() {\n  useStyles();\n\n  return (\n    <Router history={history}>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","/* eslint-disable import/prefer-default-export */\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index';\n\n\nexport function configureStore(preloadedState = {}) {\n  const middlewares = [thunkMiddleware];\n\n\n  const middlewareEnhancer = composeWithDevTools(\n    applyMiddleware(...middlewares)\n  );\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n"],"sourceRoot":""}